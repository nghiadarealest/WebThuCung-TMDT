@{
    ViewBag.Title = "Giỏ Hàng";
}
<link rel="stylesheet" href="/css/cart.css" />

<div class="cart-wrapper">
    <!-- Tiêu đề Giỏ Hàng -->
    <h1 class="cart-title">Giỏ Hàng Của Bạn</h1>

    <form class="cart-form" action="/cart" method="post">
        <div class="cart-table-wrapper">
            <table class="cart-table" cellspacing="0">
                <thead>
                    <tr>
                        <th class="product-select">
                            <input type="checkbox" id="select-all" onclick="toggleSelectAll(this)">
                        </th>
                        <th class="product-name">Sản phẩm</th>
                        <th class="product-price">Giá</th>
                        <th class="product-quantity1">Số lượng</th>
                        <th class="product-subtotal">Tạm tính</th>
                        <th class="product-remove">Xóa</th>
                    </tr>
                </thead>
                <tbody class="cart-body">
                    
                </tbody>
            </table>
        </div>
    </form> 

    <!-- Tổng cộng và thanh toán -->
    <div class="cart-summary">
        <h2>Cộng giỏ hàng</h2>
        <table class="cart-totals">
            
        </table>

        <div class="proceed-to-checkout">
            <a href="/Home/orderPayment" class="checkout-button">Tiến hành thanh toán</a>
        </div>
    </div>  
</div>

<!-- #region >-->
<script>
    const callApiGetCart = async () =>{
        let totalPrice = 0
        let id = localStorage.getItem('id');
        let data = [];
        try {
            const response = await fetch(`https://localhost:5003/api/carts?id=${id}`);
            
            // Kiểm tra nếu response trả về thành công
            if (response.status ==200) {
             data = await response.json(); // Chuyển đổi dữ liệu JSON
            
            } else {
            console.error('Lỗi khi tải dữ liệu:', response.statusText);
            }
        } catch (error) {
            console.error('Có lỗi xảy ra:', error);
        }


        let cart =document.querySelector('.cart-body'); 
        let cartSummary =document.querySelector('.cart-totals'); 

        
        data?.data?.map((item) => {
            let price
            if(item.discountPercent) {
                price = item.price - item.price * item.discountPercent / 100;
            }
            else { 
                price = item.price;
            }
            totalPrice += (price * item.quantity)
            cart.innerHTML += `
                    <tr class="cart-item">
                        <td class="product-select">
                            <input type="checkbox" name="selected_items[]" value="1">
                        </td>
                        <td class="product-name">
                            @* <img src="/images/product1.jpg" alt="" width="100" height="100"> *@
                            <a>${item.productName}</a>
                        </td>
                        <td class="product-price">${(price*1000).toLocaleString('vi-VN')}₫</td>
                        <td class="product-quantity">
                            <input class="product-quantity-i" type="number" name="quantity[1]" value="${item.quantity}" min="1" data-product-id="${item.productId}" >
                        </td>
                        <td class="product-subtotal">${(price * item.quantity *1000).toLocaleString('vi-VN')}₫</td>
                        <td class="product-remove">
                            <a href="#"><i class="fas fa-trash"></i></a>
                        </td>
                    </tr>`
            
        })

        cartSummary.innerHTML +=`<tr>
                <th>Tạm tính</th>
                <td>${(totalPrice *1000).toLocaleString('vi-VN')} ₫</td>
            </tr>

            <tr class="order-total">
                <th>Tổng cộng</th>
                <td>${(totalPrice *1000).toLocaleString('vi-VN')} ₫</td>
            </tr>`
    
        
    }
    callApiGetCart();



    const updateCart = async (productId) => {
        let userId = localStorage.getItem('id');
        console.log(productId)
        
        let a =await fetch(`https://localhost:5003/api/cart`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                UserId: userId,
                ProductId: productId,
                Quantity: quantity
            })
        });

        let res =await a.json();
        if(res.status == 200) {
            callApiGetCart()
        } else {
        }
    }

     document.addEventListener('DOMContentLoaded', () => {
        let productQuantitys = document.querySelectorAll('.product-quantity-i')
        console.log(productQuantitys)
        productQuantitys.forEach(productQuantity => {
            productQuantity.addEventListener('change', () => {
                const productId = productQuantity.dataset.productId; // Giả sử bạn lưu productId trong data-attribute
                updateCart(productId, productQuantity.value);
            });
        });
    });
</script>
<script>
    function toggleSelectAll(source) {
        let checkboxes = document.querySelectorAll('input[name="selected_items[]"]');
        checkboxes.forEach(function (checkbox) {
            checkbox.checked = source.checked;
        });
    }
    // Chuyển đổi hiển thị của form thay đổi địa chỉ
@* document.querySelector('.change-address').addEventListener('click', function(event) {
    event.preventDefault();
    let addressForm = document.querySelector('.address-form');
    if (addressForm.style.display === 'none' || addressForm.style.display === '') {
        addressForm.style.display = 'block';
        addressForm.classList.add('show');
    } else {
        addressForm.style.display = 'none';
        addressForm.classList.remove('show');
    }
}); *@

</script>
