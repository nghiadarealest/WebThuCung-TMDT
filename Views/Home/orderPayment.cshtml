@{
    ViewData["Title"] = "Thanh toán và giao hàng";
}
<link rel="stylesheet" href="/css/orderPayment.css" />

<div class="checkout-container">
    <h1 class="checkout-title">THANH TOÁN VÀ GIAO HÀNG</h1>

    <form class="checkout-form" id="checkoutForm">
        <div class="form-section">
            <div class="form-group">
                <label for="fullName">Họ và tên <span class="required">*</span></label>
                <input type="text" id="fullName" class="form-control" placeholder="Nhập họ và tên" required>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="phone">Số điện thoại <span class="required">*</span></label>
                    <input type="tel" id="phone" class="form-control" placeholder="Nhập số điện thoại" required>
                </div>
                <div class="form-group">
                    <label for="email">Địa chỉ email <span class="required">*</span></label>
                    <input type="email" id="email" class="form-control" placeholder="Nhập địa chỉ email" required>
                </div>
            </div>

            <div class="form-group">
                <label for="address">Địa chỉ <span class="required">*</span></label>
                <input type="text" id="address" class="form-control" placeholder="Nhập địa chỉ cụ thể, số nhà, tên đường" required>
            </div>

            <div class="form-group">
                <label for="orderNote">Ghi chú đơn hàng (tùy chọn)</label>
                <textarea id="orderNote" class="form-control" rows="4" placeholder="Ghi chú về đơn hàng, ví dụ: thời gian hay chỉ dẫn địa điểm giao hàng chi tiết hơn."></textarea>
            </div>
        </div>

        <div class="order-section">
            <h2>ĐƠN HÀNG CỦA BẠN</h2>
            <div class="order-details">
                <div class="order-details-wrap"></div>

                <div class="order-summary">
                    <div class="total-row"></div>
                </div>

                <div class="payment-methods">
                    <div class="payment-option">
                        <input type="radio" id="cod" name="payment" checked>
                        <img src="/images/cod.png" alt="COD Logo" style="height: 20px; margin-right: 8px;">
                        <label for="cod">Thanh toán khi nhận hàng (COD)</label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="bank" name="payment">
                        <img src="/images/qrcod.png" alt="QR Logo" style="height: 20px; margin-right: 8px;">
                        <label for="bank">Chuyển khoản ngân hàng</label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="momo" name="payment">
                        <img src="/images/momo-logo.png" alt="Momo Logo" style="height: 20px; margin-right: 8px;">
                        <label for="momo">Thanh toán qua ví Momo</label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="vnpay" name="payment">
                        <img src="/images/vnpay-logo.png" alt="VNPay Logo" style="height: 20px; margin-right: 8px;">
                        <label for="vnpay">Thanh toán qua VNPay</label>
                    </div>
                    <div class="payment-option">
                        <input type="radio" id="zalopay" name="payment">
                        <img src="/images/zalopay-logo.png" alt="ZaloPay Logo" style="height: 20px; margin-right: 8px;">
                        <label for="zalopay">Thanh toán qua ZaloPay</label>
                    </div>
                </div>

                <button type="submit" class="order-button">Đặt hàng</button>
                <div class="note">* Thời gian thực tế có thể dao động sớm hoặc muộn hơn tùy tình hình tồn kho sản phẩm, địa chỉ nhận hàng, các dịp nhu cầu mua sắm tăng cao...</div>
            </div>
        </div>
    </form>
</div>

<script>
    let dataOrderItem;
    const callApiGetCart = async () => {
        let totalPrice = 0;
        let id = localStorage.getItem('id');
        let data = [];

        try {
            const response = await fetch(`https://localhost:5003/api/carts?id=${id}`);
            if (response.status === 200) {
                data = await response.json();
                dataOrderItem = data; // Giữ lại dữ liệu giỏ hàng
            } else {
                console.error('Lỗi khi tải dữ liệu:', response.statusText);
            }
        } catch (error) {
            console.error('Có lỗi xảy ra:', error);
        }

        let orderDetails = document.querySelector('.order-details-wrap');
        let totalRow = document.querySelector('.total-row');

        data?.data?.forEach(item => {
            let price = item.discountPercent ? item.price - item.price * item.discountPercent / 100 : item.price;
            totalPrice += (price * item.quantity);
            orderDetails.innerHTML += `
                <div class="product-item">
                    <img src="${item.imageUrl}" alt="Sản phẩm">
                    <div class="product-info">
                        <h3>${item.productName}</h3>
                        <span class="quantity">Số lượng: ${item.quantity} - Đơn giá: ${(price * 1000).toLocaleString('vi-VN')} ₫</span>
                    </div>
                    <span class="price">${(price * item.quantity * 1000).toLocaleString('vi-VN')} ₫</span>
                </div>`;
        });

        localStorage.setItem("totalPrice", totalPrice);

        totalRow.innerHTML = `
            <span>TỔNG</span>
            <span>${(totalPrice * 1000).toLocaleString('vi-VN')} ₫</span>`;
    };
    callApiGetCart();

    const handleOrder = async () => {
        const form = document.getElementById('checkoutForm');
        if (!form.checkValidity()) {
            alert('Vui lòng điền đầy đủ thông tin!');
            return;
        }

        const selectedPaymentOption = document.querySelector('input[name="payment"]:checked').id;
        let dataOrderItems;
        let id = localStorage.getItem('id');

        try {
            const response = await fetch(`https://localhost:5003/api/carts?id=${id}`);
            if (response.status === 200) {
                dataOrderItems = await response.json();
            } else {
                console.error('Lỗi khi tải dữ liệu:', response.statusText);
                return;
            }
        } catch (error) {
            console.error('Có lỗi xảy ra:', error);
            return;
        }

        const dataItem = dataOrderItems.data.map(item => ({
            ProductName: item.productName,
            Quantity: item.quantity,
            Price: item.discountPercent ? item.price - (item.price * item.discountPercent) / 100 : item.price
        }));

        if (dataItem.length === 0) return;

        const response2 = await fetch(`https://localhost:5003/api/orders`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                order: {
                    UserId: id,
                    OrderDate: new Date(),
                    TotalAmount: localStorage.getItem('totalPrice'),
                    Status: 'pending'
                },
                orderItems: dataItem,
                userId: id
            })
        });

        if (response2.status === 200) {
            const orderData = await response2.json();
            const orderId = orderData.data.order_id;
            localStorage.setItem('order_id', orderId); 
            // Chuyển hướng đến trang phù hợp dựa trên tùy chọn thanh toán
            if (selectedPaymentOption === 'cod') {
                window.location.href = 'https://localhost:5003/Home/paymentSuccessful';
            } else if (selectedPaymentOption === 'bank') {
                window.location.href = '/Home/qrcodepayment';
            } else if (selectedPaymentOption === 'momo') {
                window.location.href = '/Home/momopayment';
            }
            else if (selectedPaymentOption === 'vnpay') {
                window.location.href = '/Home/vnpaypayment';
            }
            else if (selectedPaymentOption === 'zalopay') {
                window.location.href = '/Home/zalopayment';
            }
        } else {
            alert('Đặt hàng không thành công. Vui lòng thử lại.');
        }
    };

    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('checkoutForm');
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            handleOrder();
        });

        const inputs = document.querySelectorAll('.form-control');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.style.transition = 'all 0.3s ease';
            });
        });
    });

    const paymentOptions = document.querySelectorAll('input[name="payment"]');
    paymentOptions.forEach(option => {
        option.addEventListener('change', () => {
            const shippingOptions = document.querySelectorAll('input[name="shipping"]');
            if (option.id === 'bank' || option.id === 'momo') {
                shippingOptions.forEach(shipping => {
                    shipping.disabled = true;
                });
            } else {
                shippingOptions.forEach(shipping => {
                    shipping.disabled = false;
                });
            }
        });
    });
</script>